# Importing modules
import json, requests, sys
import vk_api
import DLib

# Importing modules parts
from pyowm.exceptions import api_response_error
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor

# Creating variables with API-Keys
vk_api_key = 'c57e1e664859dd4a2e564b4262bd841bce289cbd88b1743425cdcebebc1ee295d3660f7b71088eae54736'
owm_api_key = '77f486a0b806529eb556220947c3689e'

# Initializing vk_api: longpoll-bot
vk_session = vk_api.VkApi(token = vk_api_key)
longpoll = VkLongPoll(vk_session)
vk = vk_session.get_api()

# Printing: Bot has been started!
print('C–∏—Å—Ç–µ–º–∞: –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!\n==================================================')

# Infinite cycle
while True:

	# Checking for new events cycle
	for event in longpoll.listen():

		# Initializing vkBot in DLib
		VkDLib = DLib.vkBot(vk, event)

		# Verifing for new text messages
		if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:

			# Printing: System: User(id...) write: Message
			print('–°–∏—Å—Ç–µ–º–∞: (id%s) –Ω–∞–ø–∏—Å–∞–ª: %s' % (event.user_id, event.text))

			# Verifing for hello command
			if event.text == '!hello' or event.text == '!–ø—Ä–∏–≤–µ—Ç' or event.text == '–ù–∞—á–∞—Ç—å' or event.text == '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ‚úå':

				# Sending message with hello
				VkDLib.send_msg('–ü—Ä–∏–≤–µ—Ç, —è "–û–±–æ–∑—Ä–µ–≤–∞—Ç–µ–ª—å –ø–æ–≥–æ–¥—ã" üòÄ!\n‚ö† –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –∫–∞–∫ —è —Ä–∞–±–æ—Ç–∞—é, –Ω–∞–ø–∏—à–∏ - "!help"\n–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞: –ì—É–±–∏–Ω –î–∞–Ω–∏–∏–ª')
				# Printing: System: New command: !hello, result: Run: 'Hello'
				print('–°–∏—Å—Ç–µ–º–∞: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: "!hello"\n–†–µ–∑—É–ª—å—Ç–∞—Ç: –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é: "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"\n==================================================')

				# Exit from cycle
				break

			if event.text == '!help' or event.text == '!–ø–æ–º–æ—â—å' or event.text == '–ü–æ–º–æ—â—å üíä':

				# Sending message with help
				VkDLib.send_msg('–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã üöë:\n 1. "!hello" –∏–ª–∏ "!–ø—Ä–∏–≤–µ—Ç" - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ‚úå,\n 2. "!help" –∏–ª–∏ "!–ø–æ–º–æ—â—å" - –ü–æ–º–æ—â—å üíä\n 3. "!weathy" –∏–ª–∏ "!–ø–æ–≥–æ–¥–∞" - –ü–æ–≥–æ–¥–∞ ‚òÅ\n 4. "!meme" –∏–ª–∏ "!–º–µ–º" - –ú–µ–º ü§£')
				# Printing: System: New command: !help, result: Run: 'Help'
				print('–°–∏—Å—Ç–µ–º–∞: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: "!help"\n–†–µ–∑—É–ª—å—Ç–∞—Ç: –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é: "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"\n==================================================')

				# Exit from cycle
				break

			if event.text == '!weathy' or event.text == '!–ø–æ–≥–æ–¥–∞' or event.text == '–ü–æ–≥–æ–¥–∞ ‚òÅ':

				# Sending message with choosing city
				VkDLib.send_msg('–°–Ω–æ–≤–∞ –ø—Ä–∏–≤–µ—Ç üñê, –¥–ª—è –∫–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É?\n‚ö† –ü—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞, Moscow')
				# Printing: System: New command: !weathy, result: Run: 'Choosing city'
				print('–°–∏—Å—Ç–µ–º–∞: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: "!weathy"\n–†–µ–∑—É–ª—å—Ç–∞—Ç: –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é: "–í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞"\n==================================================')
				
				# Checking for new events cycle
				for event in longpoll.listen():

					# Initializing vkBot in DLib
					VkDLib = DLib.vkBot(vk, event)

					# Verifing for new text messages
					if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:

						# Trying for:
						try:

							# Initializing getWeather in DLib
							OwmDLib = DLib.getWeather(owm_api_key, 'ru', event.text)

							# Printing: System: User(id...) choose city - "city": Cyty has been detected! Result: Run: 'Information about weather'
							print('–°–∏—Å—Ç–µ–º–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (id%s) –≤—ã–±—Ä–∞–ª –≥–æ—Ä–æ–¥ - "%s": –ì–æ—Ä–æ–¥ –æ–±–Ω–∞—Ä—É–∂–µ–Ω!\n–†–µ–∑—É–ª—å—Ç–∞—Ç: –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ"\n==================================================' % (event.user_id, event.text))

							# Sending message with detail weather
							VkDLib.send_msg('‚òÅ –í –≥–æ—Ä–æ–¥–µ - %s (–°–µ–π—á–∞—Å  %s)' % (OwmDLib.place, OwmDLib.w_get_detail()))
							# Printing: System (Information about weather): Sending information about detail weather in the city
							print('–°–∏—Å—Ç–µ–º–∞ (–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ): –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –æ–±—Å—Ç–∞–Ω–æ–≤–∫–µ –Ω–∞ —É–ª–∏—Ü–µ')

							# Sending message with temperature
							VkDLib.send_msg('üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ —Ä–∞–π–æ–Ω–µ: %s ¬∞C' % str(OwmDLib.w_get_temp()))
							# Printing: System (Information about weather): Sending information about temperature in the city
							print('–°–∏—Å—Ç–µ–º–∞ (–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ): –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –Ω–∞ —É–ª–∏—Ü–µ')

							# Printing: System (Information about weather): Couting and choosing a tip
							print('–°–∏—Å—Ç–µ–º–∞ (–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ): –û–±—Å—á–µ—Ç –∏ –≤—ã–±–æ—Ä —Å–æ–≤–µ—Ç–∞')
							# Counting temperature, choosing and sending a tip
							VkDLib.send_msg(OwmDLib.count_tip())

						# Search exeption: api_response_error.NotFoundError (Not found city)
						except api_response_error.NotFoundError:

							# Sending message with error
							VkDLib.send_msg('–°–æ—Ä—è–Ω, —è —Å–ª–æ–º–∞–ª—Å—è üò¢,\n–ü–æ–≤—Ç–æ—Ä–∏ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–¥–Ω–µ–µ.')
							# Printing: System (Information about weather): Error! Result: Sending error
							print('–°–∏—Å—Ç–µ–º–∞ (–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ): –û—à–∏–±–∫–∞!\n–†–µ–∑—É–ª—å—Ç–∞—Ç: –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏\n==================================================')

							# Exit from cycle
							break

				# Exit from cycle
				break

			if event.text == '!meme' or event.text == '!–º–µ–º' or event.text == '–ú–µ–º ü§£':

				# Sending message with meme
				VkDLib.send_msg('–í–æ—Ç —Ç–≤–æ–π –º–µ–º, –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è ‚ú®:\n(https://gfycat.com/assets/23968fa52b57e25c0a8e35bebc324202.gif)')
				# Printing: System: New command: !meme, result: Run: 'Meme'
				print('–°–∏—Å—Ç–µ–º–∞: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: "!meme"\n–†–µ–∑—É–ª—å—Ç–∞—Ç: –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é: "–í—ã–≤–æ–¥ –º–µ–º–∞"\n==================================================')

				# Exit from cycle
				break

			else:

				# System: The unknowm command! Result: Run: 'Skipping'
				print('–°–∏—Å—Ç–µ–º–∞: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!\n–†–µ–∑—É–ª—å—Ç–∞—Ç: –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é: "–ü—Ä–æ–ø—É—Å–∫"\n==================================================')

				# Exit from cycle
				break